{"version":3,"file":"index.js","sources":["../../src/config/index.js","../../src/utils/generateCallbackUrl.js","../../src/utils/randomString.js","../../src/utils/pkceChallenge.js","../../src/utils/appRouter/prepareForRedirect.js","../../src/utils/setupChallenge.js","../../src/utils/appRouter/setVerifierCookie.js","../../src/utils/generateAuthUrl.js","../../src/handlers/appRouter/handleAuth.js","../../src/handlers/appRouter/createOrg.js","../../src/handlers/appRouter/register.js","../../src/handlers/appRouter/login.js","../../src/handlers/appRouter/logout.js","../../src/handlers/appRouter/callback.js","../../src/utils/sanitizeRedirect.js","../../src/session/appRouter/getAccessToken.js","../../src/session/appRouter/getIdToken.js","../../src/session/appRouter/getClaim.js","../../src/session/appRouter/getFlag.js","../../src/session/appRouter/getUser.js","../../src/session/appRouter/getBooleanFlag.js","../../src/session/appRouter/getIntegerFlag.js","../../src/session/appRouter/getOrganization.js","../../src/session/appRouter/getPermission.js","../../src/session/appRouter/getPermissions.js","../../src/session/appRouter/getStringFlag.js","../../src/session/appRouter/getUserOrganizations.js","../../src/session/appRouter/isAuthenticated.js","../../src/authMiddleware/authMiddleware.js","../../src/components/RegisterLink.js","../../src/components/LoginLink.js","../../src/components/LogoutLink.js","../../src/components/CreateOrgLink.js","../../src/session/sessionManager.js","../../src/utils/isAppRouter.js","../../src/api-client.js","../../src/utils/pageRouter/isTokenValid.js","../../src/server/index.js"],"sourcesContent":["const initialState = {\n  user: null,\n  isLoading: true,\n  checkSession: null\n};\n\nconst SESSION_PREFIX = 'pkce-verifier';\n\nconst KINDE_SITE_URL = process.env.KINDE_SITE_URL;\n\n// We need to use NEXT_PUBLIC for frontend vars\nconst KINDE_AUTH_API_PATH = process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH\n  || process.env.KINDE_AUTH_API_PATH\n  || '/api/auth';\n\nconst KINDE_POST_LOGIN_REDIRECT_URL =\n  process.env.KINDE_POST_LOGIN_REDIRECT_URL ||\n  process.env.KINDE_POST_LOGIN_URL_REDIRECT_URL;\nconst KINDE_POST_LOGOUT_REDIRECT_URL =\n  process.env.KINDE_POST_LOGOUT_REDIRECT_URL;\n\nconst KINDE_ISSUER_URL = process.env.KINDE_ISSUER_URL;\nconst KINDE_CLIENT_ID = process.env.KINDE_CLIENT_ID;\nconst KINDE_CLIENT_SECRET = process.env.KINDE_CLIENT_SECRET;\nconst KINDE_AUDIENCE = process.env.KINDE_AUDIENCE;\n\nexport const config = {\n  apiPath: KINDE_AUTH_API_PATH,\n  initialState,\n  SESSION_PREFIX,\n  redirectURL: KINDE_SITE_URL,\n  postLoginRedirectURL: KINDE_POST_LOGIN_REDIRECT_URL,\n  issuerURL: KINDE_ISSUER_URL,\n  clientID: KINDE_CLIENT_ID,\n  clientSecret: KINDE_CLIENT_SECRET,\n  postLogoutRedirectURL: KINDE_POST_LOGOUT_REDIRECT_URL,\n  audience: KINDE_AUDIENCE,\n  responseType: 'code',\n  scope: 'openid profile email offline',\n  codeChallengeMethod: 'S256',\n  redirectRoutes: {\n    callback: `${KINDE_AUTH_API_PATH}/kinde_callback`\n  },\n  issuerRoutes: {\n    logout: '/logout',\n    login: '/oauth2/auth',\n    register: '/oauth2/auth',\n    token: '/oauth2/token',\n    profile: '/oauth2/v2/user_profile'\n  }\n};\n","const generateCallbackUrl = (base, path) => {\n  const siteUrl = base.endsWith('/') ? base.slice(0, -1) : base;\n  const callbackPath = path.startsWith('/') ? path.substr(1) : path;\n  return `${siteUrl}/${callbackPath}`;\n};\n\nexport {generateCallbackUrl};\n","const {getRandomValues} = require(\"uncrypto\");\n\nexport const randomString = () => {\n    const buffer = new Uint8Array(28);\n    getRandomValues(buffer);\n    return Array.from(buffer).map((n) => n.toString(16).padStart(2, \"0\")).join(\"\");\n}\n","import {SHA256, enc} from 'crypto-js';\nimport {randomString} from './randomString';\n\nexport function generateVerifier() {\n  return randomString();\n}\n\nexport function generateChallenge(code_verifier) {\n  return SHA256(code_verifier).toString(enc.Base64url);\n}\n\nexport default function pkceChallenge() {\n  const code_verifier = generateVerifier();\n  const code_challenge = generateChallenge(code_verifier);\n  return {\n    code_verifier,\n    code_challenge\n  };\n}\n","import {setupChallenge} from '../setupChallenge';\nimport {setVerifierCookie} from './setVerifierCookie';\nimport {generateAuthUrl} from '../generateAuthUrl';\n\nexport const prepareForRedirect = (options, type = 'login') => {\n  const {code_challenge, code_verifier, state} = setupChallenge();\n  setVerifierCookie(state, code_verifier, options);\n  options.state = state;\n  options.code_challenge = code_challenge;\n\n  return generateAuthUrl(options, type).href;\n};\n","import pkceChallenge from './pkceChallenge';\nimport {randomString} from './randomString';\n\nexport const setupChallenge = (req, res) => {\n  const state = randomString();\n  const {code_challenge, code_verifier} = pkceChallenge();\n\n  return {state, code_challenge, code_verifier};\n};\n","import {config} from '../../config/index';\nimport {cookies} from 'next/headers';\n\nexport const setVerifierCookie = (state, code_verifier, options) => {\n  cookies().set({\n    name: `${config.SESSION_PREFIX}-${state}`,\n    value: JSON.stringify({code_verifier, options}),\n    httpOnly: true,\n    path: '/',\n    maxAge: 60 * 15\n  });\n};\n","import {config} from '../config/index';\nimport {generateCallbackUrl} from '../utils/generateCallbackUrl';\n\nexport function generateAuthUrl(options, type = 'login') {\n  const {org_code, is_create_org, org_name = ''} = options;\n  const authUrl = new URL(config.issuerURL + config.issuerRoutes[type]);\n\n  let searchParams = {\n    redirect_uri: generateCallbackUrl(\n      config.redirectURL,\n      config.redirectRoutes.callback\n    ),\n    client_id: config.clientID,\n    response_type: config.responseType,\n    scope: config.scope,\n    code_challenge: options.code_challenge,\n    code_challenge_method: config.codeChallengeMethod,\n    state: options.state\n  };\n\n  if (type === 'register') {\n    searchParams.start_page = 'registration';\n  }\n\n  if (org_code) {\n    searchParams.org_code = org_code;\n  }\n\n  if (is_create_org) {\n    searchParams.is_create_org = is_create_org;\n    searchParams.org_name = org_name;\n  }\n\n  if (config.audience) {\n    searchParams.audience = config.audience;\n  }\n\n  authUrl.search = new URLSearchParams(searchParams);\n  return authUrl;\n}\n","import {callback} from './callback';\nimport {createOrg} from './createOrg';\nimport {login} from './login';\nimport {logout} from './logout';\nimport {register} from './register';\n\nconst routeMap = {\n  create_org: createOrg,\n  register,\n  login,\n  logout,\n  kinde_callback: callback\n};\n\nconst getRoute = (endpoint) => {\n  return routeMap[endpoint];\n};\n\nexport async function handleAuth(request, endpoint) {\n  const route = getRoute(endpoint);\n\n  return route\n    ? await route(request)\n    : new Response('This page could not be found.', {status: 404});\n}\n","import {prepareForRedirect} from '../../utils/appRouter/prepareForRedirect';\nimport {redirect} from 'next/navigation';\n\nexport const createOrg = async (request) => {\n  const org_name = request.nextUrl.searchParams.get('org_name');\n  const options = {\n    org_name,\n    is_create_org: true\n  };\n  const authUrl = prepareForRedirect(options, 'register');\n\n  redirect(authUrl);\n};\n","import {prepareForRedirect} from '../../utils/appRouter/prepareForRedirect';\nimport {redirect} from 'next/navigation';\n\nexport const register = async (request) => {\n  const org_code = request.nextUrl.searchParams.get('org_code');\n  const post_login_redirect_url = request.nextUrl.searchParams.get(\n    'post_login_redirect_url'\n  );\n\n  const options = {org_code, post_login_redirect_url};\n\n  const authUrl = prepareForRedirect(options, 'register');\n\n  redirect(authUrl);\n};\n","import {redirect} from 'next/navigation';\nimport {prepareForRedirect} from '../../utils/appRouter/prepareForRedirect';\n\nexport const login = async (request) => {\n  const org_code = request.nextUrl.searchParams.get('org_code');\n  const post_login_redirect_url = request.nextUrl.searchParams.get(\n    'post_login_redirect_url'\n  );\n  const options = {org_code, post_login_redirect_url};\n  const authUrl = prepareForRedirect(options);\n\n  redirect(authUrl);\n};\n","import {redirect} from 'next/navigation';\nimport {cookies} from 'next/headers';\nimport {config} from '../../config/index';\n\nexport const logout = async (request) => {\n  const cookieStore = cookies();\n  cookies().set({\n    name: 'kinde_token',\n    value: '',\n    httpOnly: true,\n    expires: new Date(0),\n    sameSite: 'lax',\n    secure: config.redirectURL.substring(0, 6) == 'https:',\n    path: '/'\n  });\n\n  const logoutURL = new URL(config.issuerURL + config.issuerRoutes.logout);\n  logoutURL.searchParams.set('redirect', config.postLogoutRedirectURL || '');\n  redirect(logoutURL.href);\n};\n","import jwt_decode from 'jwt-decode';\nimport {config} from '../../config/index';\nimport {version} from '../../utils/version';\nimport {cookies} from 'next/headers';\nimport {redirect} from 'next/navigation';\nimport {sanitizeRedirect} from '../../utils/sanitizeRedirect';\nimport {generateCallbackUrl} from '../../utils/generateCallbackUrl';\n\nexport const callback = async (request) => {\n  const code = request.nextUrl.searchParams.get('code');\n  const state = request.nextUrl.searchParams.get('state');\n\n  const cookieStore = cookies();\n  const jsonCookieValue = cookieStore.get(`${config.SESSION_PREFIX}-${state}`);\n\n  let redirectUrl = config.postLoginRedirectURL || config.redirectURL;\n\n  if (jsonCookieValue) {\n    const {code_verifier, options} = JSON.parse(jsonCookieValue.value);\n\n    if (options?.post_login_redirect_url) {\n      redirectUrl = sanitizeRedirect({\n        baseUrl: new URL(config.redirectURL).origin,\n        url: options.post_login_redirect_url\n      });\n    }\n\n    try {\n      const response = await fetch(\n        config.issuerURL + config.issuerRoutes.token,\n        {\n          method: 'POST',\n          headers: new Headers({\n            'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            'Kinde-SDK': `\"NextJS\"/${version}`\n          }),\n          body: new URLSearchParams({\n            client_id: config.clientID,\n            client_secret: config.clientSecret,\n            code: code,\n            code_verifier: code_verifier,\n            grant_type: 'authorization_code',\n            redirect_uri: generateCallbackUrl(\n              config.redirectURL,\n              config.redirectRoutes.callback\n            )\n          })\n        }\n      );\n      const data = await response.json();\n      console.log('look here', data);\n      const tokenHeader = jwt_decode(data.access_token, {header: true});\n      const payload = jwt_decode(data.access_token);\n\n      let isAudienceValid = true;\n\n      if (config.audience)\n        isAudienceValid = payload.aud && payload.aud.includes(config.audience);\n\n      if (\n        payload.iss === config.issuerURL &&\n        tokenHeader.alg === 'RS256' &&\n        payload.exp > Math.floor(Date.now() / 1000) &&\n        isAudienceValid\n      ) {\n        cookies().set({\n          name: 'kinde_token',\n          value: JSON.stringify(data),\n          httpOnly: true,\n          expires: new Date(payload.exp * 1000),\n          sameSite: 'lax',\n          secure: config.redirectURL.substring(0, 6) == 'https:',\n          path: '/'\n        });\n      } else {\n        console.error('One or more of the claims were not verified.');\n      }\n    } catch (err) {\n      console.error({err});\n    }\n    redirect(redirectUrl);\n  } else {\n    const logoutURL = new URL(config.issuerURL + config.issuerRoutes.logout);\n    logoutURL.searchParams.set('redirect', config.postLogoutRedirectURL);\n    redirect(logoutURL.href);\n  }\n};\n","export const sanitizeRedirect = ({baseUrl, url}) => {\n  if (url.startsWith(\"/\")){\n    return `${baseUrl}${url}`\n  } else if (new URL(url).origin === baseUrl) {\n    return url\n  }\n\n  return baseUrl\n}","import jwt_decode from 'jwt-decode';\nimport {cookies} from 'next/headers';\n\nexport const getAccessToken = (request) => {\n  const cookieStore = cookies();\n  const kinde_token = cookieStore.get('kinde_token');\n  if (kinde_token) {\n    const accessTokenPayload = jwt_decode(\n      JSON.parse(kinde_token.value).access_token\n    );\n    return accessTokenPayload;\n  } else {\n    return {\n      message:\n        'There is no kinde_token, you are not authenticated. Try logging in.'\n    };\n  }\n};\n","import jwt_decode from 'jwt-decode';\nimport {cookies} from 'next/headers';\n\nexport const getIdToken = (request) => {\n  const cookieStore = cookies();\n  const kinde_token = cookieStore.get('kinde_token');\n  if (kinde_token) {\n    const payload = jwt_decode(JSON.parse(kinde_token.value).id_token);\n    return payload;\n  } else {\n    return undefined;\n  }\n};\n","import {getAccessToken} from './getAccessToken';\nimport {getIdToken} from './getIdToken';\n\nexport const getClaim = (claim) => {\n  const accessToken = getAccessToken();\n  return accessToken ? accessToken[claim] : null;\n};\n\nexport const getClaimFromIdToken = (claim) => {\n  const idToken = getIdToken();\n  return idToken ? idToken[claim] : null;\n};\n","import {getClaim} from './getClaim';\n\nconst flagDataTypeMap = {\n  s: 'string',\n  i: 'integer',\n  b: 'boolean'\n};\n\nexport const getFlag = (code, defaultValue, flagType) => {\n  const flags = getClaim('feature_flags');\n  const flag = flags && flags[code] ? flags[code] : {};\n\n  if (flag == {} && defaultValue == undefined) {\n    throw Error(\n      `Flag ${code} was not found, and no default value has been provided`\n    );\n  }\n\n  if (flagType && flag.t && flagType !== flag.t) {\n    throw Error(\n      `Flag ${code} is of type ${flagDataTypeMap[flag.t]} - requested type ${\n        flagDataTypeMap[flagType]\n      }`\n    );\n  }\n  return {\n    code,\n    type: flagDataTypeMap[flag.t || flagType],\n    value: flag.v == null ? defaultValue : flag.v,\n    is_default: flag.v == null\n  };\n};\n","import { getIdToken } from \"./getIdToken\";\n\nconst getUser = (req) => {\n  const idToken = getIdToken(req);\n  return idToken\n    ? {\n        id: idToken.sub,\n        given_name: idToken.given_name,\n        family_name: idToken.family_name,\n        email: idToken.email,\n        picture: idToken.picture,\n      }\n    : undefined;\n};\n\nexport { getUser };\n","import {getFlag} from './getFlag';\n\nexport const getBooleanFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 'b');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getFlag} from './getFlag';\n\nexport const getIntegerFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 'i');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import { getClaim } from \"./getClaim\";\n\nexport const getOrganization = () => {\n  const orgCode = getClaim(\"org_code\");\n  return {\n    orgCode,\n  };\n};\n","import { getClaim } from \"./getClaim\";\n\nexport const getPermission = (key) => {\n  const orgCode = getClaim(\"org_code\");\n  const permissions = getClaim(\"permissions\") || [];\n  return {\n    isGranted: permissions.some((p) => p === key),\n    orgCode,\n  };\n};\n","import { getClaim } from \"./getClaim\";\n\nexport const getPermissions = () => {\n  const orgCode = getClaim(\"org_code\");\n  const permissions = getClaim(\"permissions\");\n  return {\n    permissions,\n    orgCode,\n  };\n};\n","import {getFlag} from './getFlag';\n\nexport const getStringFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 's');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getClaimFromIdToken} from './getClaim';\n\nexport const getUserOrganizations = (req) => {\n  const orgCodes = getClaimFromIdToken('org_codes');\n  return {\n    orgCodes\n  };\n};\n","import { getUser } from \"./getUser\";\n\nconst isAuthenticated = (req) => Boolean(getUser(req));\n\nexport { isAuthenticated };\n","import jwt_decode from 'jwt-decode';\nimport {NextResponse} from 'next/server';\nimport {config} from '../config/index';\n\nconst trimTrailingSlash = (str) =>\n  str && str.charAt(str.length - 1) === '/' ? str.slice(0, -1) : str;\n\nexport function authMiddleware(request) {\n  let isAuthenticated = false;\n  const nextUrl = trimTrailingSlash(request.nextUrl.href);\n  const logoutUrl = trimTrailingSlash(config.postLogoutRedirectURL);\n  const kinde_token = request.cookies.get('kinde_token');\n  const isLogoutUrl = nextUrl === logoutUrl;\n\n  if (kinde_token) {\n    const payload = jwt_decode(JSON.parse(kinde_token.value).access_token);\n    isAuthenticated = true;\n  }\n\n  if (!isAuthenticated && !isLogoutUrl) {\n    return NextResponse.redirect(\n      new URL(config.postLogoutRedirectURL, request.url)\n    );\n  }\n\n  if (isAuthenticated && isLogoutUrl) {\n    return NextResponse.redirect(new URL(config.postLoginRedirectURL));\n  }\n\n  return NextResponse.next();\n}\n","import React from 'react';\n\nimport {config} from '../config/index';\n\nexport function RegisterLink({\n  children,\n  orgCode,\n  postLoginRedirectURL,\n  ...props\n}) {\n  let params = new URLSearchParams();\n  if (orgCode != null) params.append('org_code', orgCode);\n  if (postLoginRedirectURL != null)\n    params.append('post_login_redirect_url', postLoginRedirectURL);\n  return (\n    <a\n      href={`${config.apiPath}/register${\n        params ? `?${params.toString()}` : ''\n      }`}\n      {...props}\n    >\n      {children}\n    </a>\n  );\n}\n","import React from 'react';\n\nimport {config} from '../config/index';\n\nexport function LoginLink({children, postLoginRedirectURL, orgCode, ...props}) {\n  let params = new URLSearchParams();\n  if (orgCode != null) params.append('org_code', orgCode);\n  if (postLoginRedirectURL != null)\n    params.append('post_login_redirect_url', postLoginRedirectURL);\n  return (\n    <a\n      href={`${config.apiPath}/login${params ? `?${params.toString()}` : ''}`}\n      {...props}\n    >\n      {children}\n    </a>\n  );\n}\n","import React from 'react';\n\nimport {config} from '../config/index';\n\nexport function LogoutLink({children, ...props}) {\n  return (\n    <a href={`${config.apiPath}/logout`} {...props}>\n      {children}\n    </a>\n  );\n}\n","import React from 'react';\n\nimport {config} from '../config/index';\n\nexport function CreateOrgLink({children, orgName, ...props}) {\n  return (\n    <a\n      href={`${config.apiPath}/create_org${orgName ? `?org_name=${orgName}` : ''}`}\n      {...props}\n    >\n      {children}\n    </a>\n  );\n}\n","import {isAppRouter} from '../utils/isAppRouter';\nimport {cookies} from 'next/headers';\n\nvar cookie = require('cookie');\n\nexport const sessionManager = (req, res) => {\n  if (!req) return appRouterSessionManager(cookies());\n  return isAppRouter(req)\n    ? appRouterSessionManager(cookies())\n    : pageRouterSessionManager(req, res);\n};\n\nexport const appRouterSessionManager = (cookieStore) => ({\n  getSessionItem: (itemKey) => {\n    const item = cookieStore.get(itemKey);\n    if (item) {\n      try {\n        const jsonValue = JSON.parse(item.value);\n        if (typeof jsonValue === 'object') {\n          return jsonValue;\n        }\n        return item.value;\n      } catch (error) {\n        return item.value;\n      }\n    }\n    return undefined;\n  },\n  setSessionItem: (itemKey, itemValue) =>\n    cookieStore.set(\n      itemKey,\n      typeof itemValue === 'object' ? JSON.stringify(itemValue) : itemValue\n    ),\n  removeSessionItem: (itemKey) => cookieStore.delete(itemKey),\n  destroySession: () => {\n    [\n      'id_token_payload',\n      'id_token',\n      'access_token_payload',\n      'access_token',\n      'user',\n      'refresh_token'\n    ].forEach((name) => cookieStore.delete(name));\n  }\n});\n\nexport const pageRouterSessionManager = (req, res) => ({\n  getSessionItem: (itemKey) => {\n    const itemValue = req.cookies[itemKey];\n    if (itemValue) {\n      try {\n        const jsonValue = JSON.parse(itemValue);\n        if (typeof jsonValue === 'object') {\n          return jsonValue;\n        }\n        return itemValue;\n      } catch (error) {\n        return itemValue;\n      }\n    }\n    return undefined;\n  },\n  setSessionItem: (itemKey, itemValue) => {\n    let cookies = res.getHeader('Set-Cookie') || [];\n\n    if (!Array.isArray(cookies)) {\n      cookies = [cookies];\n    }\n\n    res.setHeader('Set-Cookie', [\n      ...cookies.filter((cookie) => !cookie.startsWith(`${itemKey}=`)),\n      cookie.serialize(\n        itemKey,\n        typeof itemValue === 'object' ? JSON.stringify(itemValue) : itemValue,\n        {path: '/'}\n      )\n    ]);\n  },\n  removeSessionItem: (itemKey) => {\n    res.setHeader(\n      'Set-Cookie',\n      cookie.serialize(itemKey, '', {path: '/', maxAge: -1})\n    );\n  },\n  destroySession: () => {\n    res.setHeader(\n      'Set-Cookie',\n      [\n        'id_token_payload',\n        'id_token',\n        'access_token_payload',\n        'access_token',\n        'user',\n        'refresh_token'\n      ].map((name) => cookie.serialize(name, '', {path: '/', maxAge: -1}))\n    );\n  }\n});\n","export const isAppRouter = (req) => {\n  return req instanceof Request;\n};\n","import {\n  APIsApi,\n  ApplicationsApi,\n  BusinessApi,\n  CallbacksApi,\n  Configuration,\n  ConnectedAppsApi,\n  EnvironmentsApi,\n  FeatureFlagsApi,\n  IndustriesApi,\n  OAuthApi,\n  OrganizationsApi,\n  PermissionsApi,\n  RolesApi,\n  SubscribersApi,\n  TimezonesApi,\n  UsersApi\n} from '@kinde-oss/kinde-typescript-sdk';\nimport {config} from './config/index';\nimport {sessionManager} from './session/sessionManager';\nimport {isTokenValid} from './utils/pageRouter/isTokenValid';\n\n/**\n * Create the Kinde Management API client\n * @param {Request | NextApiRequest} [req] - optional request (required when used with pages router)\n * @param {Response} [res] - optional response (required when used with pages router)\n */\nexport const createKindeManagementAPIClient = async (req, res) => {\n  let apiToken = null;\n\n  const store = sessionManager(req, res);\n  const tokenFromCookie = store.getSessionItem('kinde_api_access_token');\n  if (isTokenValid(tokenFromCookie)) {\n    apiToken = tokenFromCookie;\n  } else {\n    const response = await fetch(`${config.issuerURL}/oauth2/token`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        grant_type: 'client_credentials',\n        client_id: config.clientID,\n        client_secret: config.clientSecret,\n        audience: config.audience\n      })\n    });\n    apiToken = (await response.json()).access_token;\n    store.setSessionItem('kinde_api_access_token', apiToken);\n  }\n\n  const cfg = new Configuration({\n    basePath: config.issuerURL,\n    accessToken: apiToken,\n    headers: {Accept: 'application/json'}\n  });\n  const usersApi = new UsersApi(cfg);\n  const oauthApi = new OAuthApi(cfg);\n  const subscribersApi = new SubscribersApi(cfg);\n  const organizationsApi = new OrganizationsApi(cfg);\n  const connectedAppsApi = new ConnectedAppsApi(cfg);\n  const featureFlagsApi = new FeatureFlagsApi(cfg);\n  const environmentsApi = new EnvironmentsApi(cfg);\n  const permissionsApi = new PermissionsApi(cfg);\n  const rolesApi = new RolesApi(cfg);\n  const businessApi = new BusinessApi(cfg);\n  const industriesApi = new IndustriesApi(cfg);\n  const timezonesApi = new TimezonesApi(cfg);\n  const applicationsApi = new ApplicationsApi(cfg);\n  const callbacksApi = new CallbacksApi(cfg);\n  const apisApi = new APIsApi(cfg);\n\n  return {\n    usersApi,\n    oauthApi,\n    subscribersApi,\n    organizationsApi,\n    connectedAppsApi,\n    featureFlagsApi,\n    environmentsApi,\n    permissionsApi,\n    rolesApi,\n    businessApi,\n    industriesApi,\n    timezonesApi,\n    applicationsApi,\n    callbacksApi,\n    apisApi\n  };\n};\n","import jwt_decode from 'jwt-decode';\nimport {config} from '../../config/index';\n\nconst isTokenValid = (token) => {\n  const accessToken = (token && token.access_token) || token;\n  if (!accessToken) return false;\n\n  const accessTokenHeader = jwt_decode(accessToken, {header: true});\n  const accessTokenPayload = jwt_decode(accessToken);\n  let isAudienceValid = true;\n  if (config.audience)\n    isAudienceValid =\n      accessTokenPayload.aud &&\n      accessTokenPayload.aud.includes(config.audience);\n\n  if (\n    accessTokenPayload.iss == config.issuerURL &&\n    accessTokenHeader.alg == 'RS256' &&\n    accessTokenPayload.exp > Math.floor(Date.now() / 1000) &&\n    isAudienceValid\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport {isTokenValid};\n","export {handleAuth} from '../handlers/appRouter/index';\nimport * as serverSession from '../session/appRouter/index';\n\nexport const getKindeServerSession = () => {\n  return serverSession;\n};\n\nexport {authMiddleware} from '../authMiddleware/authMiddleware';\n\nexport {RegisterLink} from '../components/RegisterLink';\nexport {LoginLink} from '../components/LoginLink';\nexport {LogoutLink} from '../components/LogoutLink';\nexport {CreateOrgLink} from '../components/CreateOrgLink';\nexport {createKindeManagementAPIClient} from '../api-client';\n"],"names":["KINDE_SITE_URL","process","env","KINDE_AUTH_API_PATH","NEXT_PUBLIC_KINDE_AUTH_API_PATH","KINDE_POST_LOGIN_REDIRECT_URL","KINDE_POST_LOGIN_URL_REDIRECT_URL","KINDE_POST_LOGOUT_REDIRECT_URL","config","apiPath","initialState","user","isLoading","checkSession","SESSION_PREFIX","redirectURL","postLoginRedirectURL","issuerURL","KINDE_ISSUER_URL","clientID","KINDE_CLIENT_ID","clientSecret","KINDE_CLIENT_SECRET","postLogoutRedirectURL","audience","KINDE_AUDIENCE","responseType","scope","codeChallengeMethod","redirectRoutes","callback","issuerRoutes","logout","login","register","token","profile","generateCallbackUrl","base","path","endsWith","slice","startsWith","substr","getRandomValues","require","randomString","buffer","Uint8Array","Array","from","map","n","toString","padStart","join","pkceChallenge","code_verifier","code_challenge","SHA256","enc","Base64url","generateChallenge","prepareForRedirect","options","type","state","setupChallenge","req","res","setVerifierCookie","cookies","set","name","value","JSON","stringify","httpOnly","maxAge","org_code","is_create_org","org_name","authUrl","URL","searchParams","redirect_uri","client_id","response_type","code_challenge_method","start_page","search","URLSearchParams","generateAuthUrl","href","routeMap","create_org","async","request","nextUrl","get","redirect","post_login_redirect_url","expires","Date","sameSite","secure","substring","logoutURL","kinde_callback","code","jsonCookieValue","redirectUrl","parse","sanitizeRedirect","baseUrl","url","origin","response","fetch","method","headers","Headers","body","client_secret","grant_type","data","json","console","log","tokenHeader","jwt_decode","access_token","header","payload","isAudienceValid","aud","includes","iss","alg","exp","Math","floor","now","error","err","handleAuth","endpoint","route","getRoute","Response","status","getAccessToken","kinde_token","message","getIdToken","id_token","getClaim","claim","accessToken","flagDataTypeMap","s","i","b","getFlag","defaultValue","flagType","flags","flag","undefined","Error","t","v","is_default","getUser","idToken","id","sub","given_name","family_name","email","picture","getBooleanFlag","getIntegerFlag","getOrganization","orgCode","key","isGranted","some","p","getPermissions","permissions","getStringFlag","orgCodes","getClaimFromIdToken","Boolean","trimTrailingSlash","str","charAt","length","authMiddleware","isAuthenticated","logoutUrl","isLogoutUrl","NextResponse","next","RegisterLink","children","props","params","append","React","createElement","_extends","LoginLink","LogoutLink","CreateOrgLink","orgName","cookie","sessionManager","Request","isAppRouter","appRouterSessionManager","pageRouterSessionManager","cookieStore","getSessionItem","itemKey","item","jsonValue","setSessionItem","itemValue","removeSessionItem","delete","destroySession","forEach","getHeader","isArray","setHeader","filter","serialize","createKindeManagementAPIClient","apiToken","store","tokenFromCookie","accessTokenHeader","accessTokenPayload","isTokenValid","cfg","Configuration","basePath","Accept","usersApi","UsersApi","oauthApi","OAuthApi","subscribersApi","SubscribersApi","organizationsApi","OrganizationsApi","connectedAppsApi","ConnectedAppsApi","featureFlagsApi","FeatureFlagsApi","environmentsApi","EnvironmentsApi","permissionsApi","PermissionsApi","rolesApi","RolesApi","businessApi","BusinessApi","industriesApi","IndustriesApi","timezonesApi","TimezonesApi","applicationsApi","ApplicationsApi","callbacksApi","CallbacksApi","apisApi","APIsApi","getKindeServerSession","serverSession"],"mappings":"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"}