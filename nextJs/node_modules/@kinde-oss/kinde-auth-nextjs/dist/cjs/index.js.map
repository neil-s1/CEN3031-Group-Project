{"version":3,"file":"index.js","sources":["../../src/config/index.js","../../src/frontend/AuthProvider.jsx","../../src/utils/randomString.js","../../src/utils/pkceChallenge.js","../../src/utils/setupChallenge.js","../../src/utils/pageRouter/setVerifierCookie.js","../../src/utils/generateCallbackUrl.js","../../src/utils/pageRouter/prepareForRedirect.js","../../src/utils/generateAuthUrl.js","../../src/handlers/pageRouter/login.js","../../src/handlers/pageRouter/logout.js","../../src/handlers/pageRouter/me.js","../../src/handlers/pageRouter/register.js","../../src/utils/pageRouter/isTokenValid.js","../../src/handlers/pageRouter/callback.js","../../src/utils/sanitizeRedirect.js","../../src/handlers/pageRouter/createOrg.js","../../src/handlers/pageRouter/getToken.js","../../src/handlers/pageRouter/setup.js","../../src/session/pagesRouter/getAccessToken.js","../../src/session/pagesRouter/getIdToken.js","../../src/session/pagesRouter/getClaim.js","../../src/session/pagesRouter/getFlag.js","../../src/session/pagesRouter/getBooleanFlag.js","../../src/session/pagesRouter/getIntegerFlag.js","../../src/session/pagesRouter/getOrganization.js","../../src/session/pagesRouter/getPermission.js","../../src/session/pagesRouter/getPermissions.js","../../src/session/pagesRouter/getStringFlag.js","../../src/session/pagesRouter/getUserOrganizations.js","../../src/handlers/pageRouter/handleAuth.js"],"sourcesContent":["const initialState = {\n  user: null,\n  isLoading: true,\n  checkSession: null\n};\n\nconst SESSION_PREFIX = 'pkce-verifier';\n\nconst KINDE_SITE_URL = process.env.KINDE_SITE_URL;\n\n// We need to use NEXT_PUBLIC for frontend vars\nconst KINDE_AUTH_API_PATH = process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH\n  || process.env.KINDE_AUTH_API_PATH\n  || '/api/auth';\n\nconst KINDE_POST_LOGIN_REDIRECT_URL =\n  process.env.KINDE_POST_LOGIN_REDIRECT_URL ||\n  process.env.KINDE_POST_LOGIN_URL_REDIRECT_URL;\nconst KINDE_POST_LOGOUT_REDIRECT_URL =\n  process.env.KINDE_POST_LOGOUT_REDIRECT_URL;\n\nconst KINDE_ISSUER_URL = process.env.KINDE_ISSUER_URL;\nconst KINDE_CLIENT_ID = process.env.KINDE_CLIENT_ID;\nconst KINDE_CLIENT_SECRET = process.env.KINDE_CLIENT_SECRET;\nconst KINDE_AUDIENCE = process.env.KINDE_AUDIENCE;\n\nexport const config = {\n  apiPath: KINDE_AUTH_API_PATH,\n  initialState,\n  SESSION_PREFIX,\n  redirectURL: KINDE_SITE_URL,\n  postLoginRedirectURL: KINDE_POST_LOGIN_REDIRECT_URL,\n  issuerURL: KINDE_ISSUER_URL,\n  clientID: KINDE_CLIENT_ID,\n  clientSecret: KINDE_CLIENT_SECRET,\n  postLogoutRedirectURL: KINDE_POST_LOGOUT_REDIRECT_URL,\n  audience: KINDE_AUDIENCE,\n  responseType: 'code',\n  scope: 'openid profile email offline',\n  codeChallengeMethod: 'S256',\n  redirectRoutes: {\n    callback: `${KINDE_AUTH_API_PATH}/kinde_callback`\n  },\n  issuerRoutes: {\n    logout: '/logout',\n    login: '/oauth2/auth',\n    register: '/oauth2/auth',\n    token: '/oauth2/token',\n    profile: '/oauth2/v2/user_profile'\n  }\n};\n","import React, {\n  useContext,\n  useState,\n  createContext,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport {config} from '../config/index';\n\nconst flagDataTypeMap = {\n  s: 'string',\n  i: 'integer',\n  b: 'boolean'\n};\n\nconst handleError = () => {\n  throw new Error(\n    'Oops! Seems like you forgot to wrap your app in <KindeProvider>.'\n  );\n};\n/**\n * @typedef {Object} User\n * @property {string} id\n * @property {string | null} name\n * @property {string | null} email\n * @property {string | null} given_name\n * @property {string | null} family_name\n * @property {string | null} updated_at\n * @property {string | null} picture\n */\n\n/**\n * @typedef {Object} State\n * @property {User} user\n * @property {boolean} isLoading\n * @property {boolean} isAuthenticated\n * @property {string=} error\n */\n\n/**\n * @returns {React.Context<State>}\n */\nconst AuthContext = createContext({\n  ...config.initialState,\n  user: handleError,\n  isLoading: handleError,\n  getToken: handleError\n});\n\n/**\n * Use auth context.\n * @returns {State}\n */\nexport const useKindeAuth = () => useContext(AuthContext);\n\nconst tokenFetcher = async (url) => {\n  let response;\n  try {\n    response = await fetch(url);\n  } catch {\n    throw new RequestError(0);\n  }\n\n  if (response.ok) {\n    const json = await response.json();\n    return json;\n  } else if (response.status === 401) {\n    return;\n  }\n};\n\nexport const KindeProvider = ({children}) => {\n  const [state, setState] = useState({\n    ...config.initialState,\n    getToken: () => null\n  });\n\n  const setupUrl = `${config.apiPath}/setup`;\n\n  // try and get the user (by fetching /api/auth/setup) -> this needs to do the OAuth stuff\n  const checkSession = useCallback(async () => {\n    try {\n      const tokens = await tokenFetcher(setupUrl);\n\n      const user = {\n        id: tokens.id_token.sub,\n        name: tokens.id_token.name,\n        given_name: tokens.id_token.given_name,\n        family_name: tokens.id_token.family_name,\n        updated_at: tokens.id_token.updated_at,\n        email: tokens.id_token.email,\n        picture: tokens.id_token.picture\n      };\n\n      const getClaim = (claim, tokenKey = 'access_token') => {\n        const token =\n          tokenKey === 'access_token' ? tokens.access_token : tokens.id_token;\n        return token ? {name: claim, value: token[claim]} : null;\n      };\n\n      const getClaimValue = (claim, tokenKey = 'access_token') => {\n        const obj = getClaim(claim, tokenKey);\n        return obj && obj.value;\n      };\n\n      const getFlag = (code, defaultValue, flagType) => {\n        const flags = getClaimValue('feature_flags');\n        const flag = flags && flags[code] ? flags[code] : {};\n\n        if (flag == {} && defaultValue == undefined) {\n          throw Error(\n            `Flag ${code} was not found, and no default value has been provided`\n          );\n        }\n\n        if (flagType && flag.t && flagType !== flag.t) {\n          throw Error(\n            `Flag ${code} is of type ${\n              flagDataTypeMap[flag.t]\n            } - requested type ${flagDataTypeMap[flagType]}`\n          );\n        }\n        return {\n          code,\n          type: flagDataTypeMap[flag.t || flagType],\n          value: flag.v == null ? defaultValue : flag.v,\n          is_default: flag.v == null\n        };\n      };\n\n      const getBooleanFlag = (code, defaultValue) => {\n        try {\n          const flag = getFlag(code, defaultValue, 'b');\n          return flag.value;\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const getStringFlag = (code, defaultValue) => {\n        try {\n          const flag = getFlag(code, defaultValue, 's');\n          return flag.value;\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const getIntegerFlag = (code, defaultValue) => {\n        try {\n          const flag = getFlag(code, defaultValue, 'i');\n          return flag.value;\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const getPermissions = () => {\n        const orgCode = getClaimValue('org_code');\n        const permissions = getClaimValue('permissions');\n        return {\n          permissions,\n          orgCode\n        };\n      };\n\n      const getPermission = (key) => {\n        const orgCode = getClaimValue('org_code');\n        const permissions = getClaimValue('permissions') || [];\n        return {\n          isGranted: permissions.some((p) => p === key),\n          orgCode\n        };\n      };\n\n      const getOrganization = () => {\n        const orgCode = getClaimValue('org_code');\n        return {\n          orgCode\n        };\n      };\n\n      const getUserOrganizations = () => {\n        const orgCodes = getClaimValue('org_codes', 'id_token');\n        return {\n          orgCodes\n        };\n      };\n\n      const getToken = () => {\n        return tokens && tokens.access_token_encoded\n          ? tokens.access_token_encoded\n          : undefined;\n      };\n\n      setState((previous) => ({\n        ...previous,\n        user,\n        getToken,\n        getClaim,\n        getFlag,\n        getBooleanFlag,\n        getStringFlag,\n        getIntegerFlag,\n        getPermissions,\n        getPermission,\n        getOrganization,\n        getUserOrganizations,\n        error: undefined\n      }));\n    } catch (error) {\n      setState((previous) => ({...previous, isLoading: false, error}));\n    }\n  }, [setupUrl]);\n\n  // if you get the user set loading false\n  useEffect(() => {\n    const checkLoading = async () => {\n      await checkSession();\n      setState((previous) => ({\n        ...previous,\n        isLoading: false\n      }));\n    };\n    if (!state.user) {\n      checkLoading();\n    }\n  }, [state.user]);\n\n  // provide this stuff to the rest of your app\n  const {\n    user,\n    getToken,\n    getClaim,\n    getFlag,\n    getBooleanFlag,\n    getStringFlag,\n    getIntegerFlag,\n    getPermissions,\n    getPermission,\n    getOrganization,\n    getUserOrganizations,\n    error,\n    isLoading\n  } = state;\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        error,\n        getToken,\n        getClaim,\n        getFlag,\n        getBooleanFlag,\n        getStringFlag,\n        getIntegerFlag,\n        getPermissions,\n        getPermission,\n        getOrganization,\n        getUserOrganizations,\n        isLoading,\n        isAuthenticated: !!user\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","const {getRandomValues} = require(\"uncrypto\");\n\nexport const randomString = () => {\n    const buffer = new Uint8Array(28);\n    getRandomValues(buffer);\n    return Array.from(buffer).map((n) => n.toString(16).padStart(2, \"0\")).join(\"\");\n}\n","import {SHA256, enc} from 'crypto-js';\nimport {randomString} from './randomString';\n\nexport function generateVerifier() {\n  return randomString();\n}\n\nexport function generateChallenge(code_verifier) {\n  return SHA256(code_verifier).toString(enc.Base64url);\n}\n\nexport default function pkceChallenge() {\n  const code_verifier = generateVerifier();\n  const code_challenge = generateChallenge(code_verifier);\n  return {\n    code_verifier,\n    code_challenge\n  };\n}\n","import pkceChallenge from './pkceChallenge';\nimport {randomString} from './randomString';\n\nexport const setupChallenge = (req, res) => {\n  const state = randomString();\n  const {code_challenge, code_verifier} = pkceChallenge();\n\n  return {state, code_challenge, code_verifier};\n};\n","import {config} from '../../config/index';\nconst cookie = require('cookie');\n\nexport const setVerifierCookie = (state, code_verifier, res, options) => {\n  const jsonCookieValue = JSON.stringify({\n    code_verifier,\n    options,\n  })\n\n  res.setHeader(\n    'Set-Cookie',\n    cookie.serialize(`${config.SESSION_PREFIX}-${state}`, jsonCookieValue, {\n      httpOnly: true,\n      maxAge: 60 * 15\n    })\n  );\n  return state;\n};\n","const generateCallbackUrl = (base, path) => {\n  const siteUrl = base.endsWith('/') ? base.slice(0, -1) : base;\n  const callbackPath = path.startsWith('/') ? path.substr(1) : path;\n  return `${siteUrl}/${callbackPath}`;\n};\n\nexport {generateCallbackUrl};\n","import {setupChallenge} from '../setupChallenge';\nimport {setVerifierCookie} from './setVerifierCookie';\nimport {generateAuthUrl} from '../generateAuthUrl';\n\nexport const prepareForRedirect = (options, type = 'login', res) => {\n  const {code_challenge, code_verifier, state} = setupChallenge();\n  setVerifierCookie(state, code_verifier, res, options);\n  options.state = state;\n  options.code_challenge = code_challenge;\n\n  return generateAuthUrl(options, type).href;\n};\n","import {config} from '../config/index';\nimport {generateCallbackUrl} from '../utils/generateCallbackUrl';\n\nexport function generateAuthUrl(options, type = 'login') {\n  const {org_code, is_create_org, org_name = ''} = options;\n  const authUrl = new URL(config.issuerURL + config.issuerRoutes[type]);\n\n  let searchParams = {\n    redirect_uri: generateCallbackUrl(\n      config.redirectURL,\n      config.redirectRoutes.callback\n    ),\n    client_id: config.clientID,\n    response_type: config.responseType,\n    scope: config.scope,\n    code_challenge: options.code_challenge,\n    code_challenge_method: config.codeChallengeMethod,\n    state: options.state\n  };\n\n  if (type === 'register') {\n    searchParams.start_page = 'registration';\n  }\n\n  if (org_code) {\n    searchParams.org_code = org_code;\n  }\n\n  if (is_create_org) {\n    searchParams.is_create_org = is_create_org;\n    searchParams.org_name = org_name;\n  }\n\n  if (config.audience) {\n    searchParams.audience = config.audience;\n  }\n\n  authUrl.search = new URLSearchParams(searchParams);\n  return authUrl;\n}\n","import {prepareForRedirect} from '../../utils/pageRouter/prepareForRedirect';\n\nexport const login = async (req, res) => {\n  const options = req.query;\n  const {org_code, is_create_org, org_name = ''} = options;\n\n  const authUrl = prepareForRedirect(options, 'login', res);\n\n  res.redirect(authUrl);\n};\n","import {config} from '../../config/index';\n\nvar cookie = require('cookie');\n\nexport const logout = async (req, res) => {\n  res.setHeader(\n    'Set-Cookie',\n    cookie.serialize('kinde_token', null, {\n      httpOnly: true,\n      expires: new Date(0),\n      sameSite: 'lax',\n      secure: config.redirectURL.substring(0, 6) == 'https:',\n      path: '/'\n    })\n  );\n\n  const logoutURL = new URL(config.issuerURL + config.issuerRoutes.logout);\n\n  logoutURL.searchParams.set('redirect', config.postLogoutRedirectURL);\n\n  res.redirect(logoutURL.href);\n};\n","import {config} from '../../config/index';\n\nvar cookie = require('cookie');\n\nexport const me = async (req, res) => {\n  const kinde_token = cookie.parse(req.headers.cookie || '')['kinde_token'];\n  if (kinde_token) {\n    const token = JSON.parse(kinde_token);\n    try {\n      const response = await fetch(\n        config.issuerURL + config.issuerRoutes.profile,\n        {\n          headers: new Headers({\n            Authorization: 'Bearer ' + token.access_token\n          })\n        }\n      );\n      const data = await response.json();\n      res.send(data);\n    } catch (err) {\n      console.error(err);\n    }\n  } else {\n    res.status(401).send({\n      message: 'Unauthorized'\n    });\n  }\n};\n","import {prepareForRedirect} from '../../utils/pageRouter/prepareForRedirect';\n\nexport const register = async (req, res) => {\n  const options = req.query;\n  const {org_code, is_create_org, org_name = ''} = options;\n\n  const authUrl = prepareForRedirect(options, 'register', res);\n\n  res.redirect(authUrl);\n};\n","import jwt_decode from 'jwt-decode';\nimport {config} from '../../config/index';\n\nconst isTokenValid = (token) => {\n  const accessToken = (token && token.access_token) || token;\n  if (!accessToken) return false;\n\n  const accessTokenHeader = jwt_decode(accessToken, {header: true});\n  const accessTokenPayload = jwt_decode(accessToken);\n  let isAudienceValid = true;\n  if (config.audience)\n    isAudienceValid =\n      accessTokenPayload.aud &&\n      accessTokenPayload.aud.includes(config.audience);\n\n  if (\n    accessTokenPayload.iss == config.issuerURL &&\n    accessTokenHeader.alg == 'RS256' &&\n    accessTokenPayload.exp > Math.floor(Date.now() / 1000) &&\n    isAudienceValid\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport {isTokenValid};\n","import jwt_decode from 'jwt-decode';\n\nimport {config} from '../../config/index';\nimport {isTokenValid} from '../../utils/pageRouter/isTokenValid';\nimport {version} from '../../utils/version';\nimport {sanitizeRedirect} from '../../utils/sanitizeRedirect';\nimport {generateCallbackUrl} from '../../utils/generateCallbackUrl';\n\nvar cookie = require('cookie');\n\nexport const callback = async (req, res) => {\n  const {code, state} = req.query;\n  const jsonCookieValue = cookie.parse(req.headers.cookie || '')[\n    `${config.SESSION_PREFIX}-${state}`\n  ];\n\n  let redirectUrl = config.postLoginRedirectURL || config.redirectURL;\n\n  if (jsonCookieValue) {\n    try {\n      const {code_verifier, options} = JSON.parse(jsonCookieValue);\n\n      if (options?.post_login_redirect_url) {\n        redirectUrl = sanitizeRedirect({\n          baseUrl: new URL(config.redirectURL).origin,\n          url: options.post_login_redirect_url\n        });\n      }\n\n      const response = await fetch(\n        config.issuerURL + config.issuerRoutes.token,\n        {\n          method: 'POST',\n          headers: new Headers({\n            'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            'Kinde-SDK': `\"NextJS\"/${version}`\n          }),\n          body: new URLSearchParams({\n            client_id: config.clientID,\n            client_secret: config.clientSecret,\n            code,\n            code_verifier,\n            grant_type: 'authorization_code',\n            redirect_uri: generateCallbackUrl(\n              config.redirectURL,\n              config.redirectRoutes.callback\n            )\n          })\n        }\n      );\n      const data = await response.json();\n\n      const accessToken = jwt_decode(data.access_token);\n      if (isTokenValid(data)) {\n        res.setHeader(\n          'Set-Cookie',\n          cookie.serialize(`kinde_token`, JSON.stringify(data), {\n            httpOnly: true,\n            expires: new Date(accessToken.exp * 1000),\n            sameSite: 'lax',\n            secure: config.redirectURL.substring(0, 6) == 'https:',\n            path: '/'\n          })\n        );\n      } else {\n        console.error('One or more of the claims were not verified.');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    res.redirect(redirectUrl);\n  } else {\n    const logoutURL = new URL(config.issuerURL + config.issuerRoutes.logout);\n    logoutURL.searchParams.set('redirect', config.postLogoutRedirectURL);\n    res.redirect(logoutURL.href);\n  }\n};\n","export const sanitizeRedirect = ({baseUrl, url}) => {\n  if (url.startsWith(\"/\")){\n    return `${baseUrl}${url}`\n  } else if (new URL(url).origin === baseUrl) {\n    return url\n  }\n\n  return baseUrl\n}","import {prepareForRedirect} from '../../utils/pageRouter/prepareForRedirect';\n\nexport const createOrg = async (req, res) => {\n  const {org_name = ''} = req.query.options;\n  const options = {\n    org_name,\n    is_create_org: true\n  };\n  const authUrl = prepareForRedirect(options, 'register', res);\n\n  res.redirect(authUrl);\n};\n","export const getToken = async (req, res) => {\n  if (req.cookies.kinde_token) {\n    res.status(200).json(JSON.parse(req.cookies.kinde_token));\n  } else {\n    res.status(500).json({\n      message:\n        'There is no kinde_token, you are not authenticated. Try logging in.'\n    });\n  }\n};\n","const cookie = require('cookie');\nimport jwt_decode from 'jwt-decode';\n\nexport const setup = async (req, res) => {\n  res.setHeader('Cache-Control', 'no-cache');\n  const kinde_token = cookie.parse(req.headers.cookie || '')['kinde_token'];\n\n  if (kinde_token) {\n    const token = JSON.parse(kinde_token);\n    const accessTokenPayload = jwt_decode(token.access_token);\n    const idTokenPayload = jwt_decode(token.id_token);\n    res.send({\n      access_token_encoded: token.access_token,\n      id_token: idTokenPayload,\n      access_token: accessTokenPayload\n    });\n  } else {\n    res.status(401).send({\n      message: 'Unauthorized'\n    });\n  }\n};\n","import jwt_decode from 'jwt-decode';\n\nexport const getAccessToken = (req, res) => {\n  if (req.cookies.kinde_token) {\n    const accessTokenPayload = jwt_decode(\n      JSON.parse(req.cookies.kinde_token).access_token\n    );\n    return accessTokenPayload;\n  } else {\n    return {\n      message:\n        'There is no kinde_token, you are not authenticated. Try logging in.'\n    };\n  }\n};\n","import jwt_decode from 'jwt-decode';\n\nexport const getIdToken = (req, res) => {\n  if (req.cookies.kinde_token) {\n    const accessTokenPayload = jwt_decode(\n      JSON.parse(req.cookies.kinde_token).id_token\n    );\n    return accessTokenPayload;\n  } else {\n    return {\n      message:\n        'There is no kinde_token, you are not authenticated. Try logging in.'\n    };\n  }\n};\n","import {getAccessToken} from './getAccessToken';\nimport {getIdToken} from './getIdToken';\n\nexport const getClaim = (req, res, claim) => {\n  const accessToken = getAccessToken(req, res);\n  return accessToken ? accessToken[claim] : null;\n};\n\nexport const getClaimFromIdToken = (req, res, claim) => {\n  const idToken = getIdToken(req, res);\n  return idToken ? idToken[claim] : null;\n};\n","import {getClaim} from './getClaim';\n\nconst flagDataTypeMap = {\n  s: 'string',\n  i: 'integer',\n  b: 'boolean'\n};\n\nexport const getFlag = (code, defaultValue, flagType) => {\n  const flags = getClaim('feature_flags');\n  const flag = flags && flags[code] ? flags[code] : {};\n\n  if (flag == {} && defaultValue == undefined) {\n    throw Error(\n      `Flag ${code} was not found, and no default value has been provided`\n    );\n  }\n\n  if (flagType && flag.t && flagType !== flag.t) {\n    throw Error(\n      `Flag ${code} is of type ${flagDataTypeMap[flag.t]} - requested type ${\n        flagDataTypeMap[flagType]\n      }`\n    );\n  }\n  return {\n    code,\n    type: flagDataTypeMap[flag.t || flagType],\n    value: flag.v == null ? defaultValue : flag.v,\n    is_default: flag.v == null\n  };\n};\n","import {getFlag} from './getFlag';\n\nexport const getBooleanFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 'b');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getFlag} from './getFlag';\n\nexport const getIntegerFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 'i');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getClaim} from './getClaim';\n\nexport const getOrganization = (req, res) => {\n  const orgCode = getClaim(req, res, 'org_code');\n  return {\n    orgCode\n  };\n};\n","import {getClaim} from './getClaim';\n\nexport const getPermission = (req, res, key) => {\n  const orgCode = getClaim(req, res, 'org_code');\n  const permissions = getClaim(req, res, 'permissions') || [];\n  return {\n    isGranted: permissions.some((p) => p === key),\n    orgCode\n  };\n};\n","import {getClaim} from './getClaim';\n\nexport const getPermissions = (req, res) => {\n  const orgCode = getClaim(req, res, 'org_code');\n  const permissions = getClaim(req, res, 'permissions');\n  return {\n    permissions,\n    orgCode\n  };\n};\n","import {getFlag} from './getFlag';\n\nexport const getStringFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 's');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getClaimFromIdToken} from './getClaim';\n\nexport const getUserOrganizations = (req, res) => {\n  const orgCodes = getClaimFromIdToken(req, res, 'org_codes');\n  return {\n    orgCodes\n  };\n};\n","import {login} from './login';\nimport {logout} from './logout';\nimport {me} from './me';\nimport {register} from './register';\nimport {callback} from './callback';\nimport {createOrg} from './createOrg';\nimport {getToken} from './getToken';\nimport {setup} from './setup';\n\nconst getRoute = (endpoint) => {\n  const routeMap = {\n    create_org: createOrg,\n    get_token: getToken,\n    kinde_callback: callback,\n    login,\n    logout,\n    me,\n    register,\n    setup\n  };\n  return routeMap[endpoint];\n};\n\nexport default () =>\n  async function handler(req, res) {\n    let {\n      query: {kindeAuth: endpoint}\n    } = req;\n\n    endpoint = Array.isArray(endpoint) ? endpoint[0] : endpoint;\n\n    const route = getRoute(endpoint);\n\n    return route ? await route(req, res) : res.status(404).end();\n  };\n"],"names":["KINDE_SITE_URL","process","env","KINDE_AUTH_API_PATH","NEXT_PUBLIC_KINDE_AUTH_API_PATH","KINDE_POST_LOGIN_REDIRECT_URL","KINDE_POST_LOGIN_URL_REDIRECT_URL","KINDE_POST_LOGOUT_REDIRECT_URL","config","apiPath","initialState","user","isLoading","checkSession","SESSION_PREFIX","redirectURL","postLoginRedirectURL","issuerURL","KINDE_ISSUER_URL","clientID","KINDE_CLIENT_ID","clientSecret","KINDE_CLIENT_SECRET","postLogoutRedirectURL","audience","KINDE_AUDIENCE","responseType","scope","codeChallengeMethod","redirectRoutes","callback","issuerRoutes","logout","login","register","token","profile","flagDataTypeMap","s","i","b","handleError","Error","AuthContext","createContext","getToken","getRandomValues","require","randomString","buffer","Uint8Array","Array","from","map","n","toString","padStart","join","pkceChallenge","code_verifier","code_challenge","SHA256","enc","Base64url","generateChallenge","cookie","generateCallbackUrl","base","path","endsWith","slice","startsWith","substr","prepareForRedirect","options","type","res","state","setupChallenge","req","setVerifierCookie","jsonCookieValue","JSON","stringify","setHeader","serialize","httpOnly","maxAge","org_code","is_create_org","org_name","authUrl","URL","searchParams","redirect_uri","client_id","response_type","code_challenge_method","start_page","search","URLSearchParams","generateAuthUrl","href","async","query","redirect","expires","Date","sameSite","secure","substring","logoutURL","set","me","kinde_token","parse","headers","response","fetch","Headers","Authorization","access_token","data","json","send","err","console","error","status","message","isTokenValid","accessToken","accessTokenHeader","jwt_decode","header","accessTokenPayload","isAudienceValid","aud","includes","iss","alg","exp","Math","floor","now","code","redirectUrl","post_login_redirect_url","sanitizeRedirect","baseUrl","url","origin","method","body","client_secret","grant_type","createOrg","cookies","setup","idTokenPayload","id_token","access_token_encoded","getAccessToken","getIdToken","getClaim","claim","getFlag","defaultValue","flagType","flags","flag","undefined","t","value","v","is_default","KindeProvider","children","setState","useState","setupUrl","useCallback","tokens","RequestError","ok","tokenFetcher","id","sub","name","given_name","family_name","updated_at","email","picture","tokenKey","getClaimValue","obj","getBooleanFlag","getStringFlag","getIntegerFlag","getPermissions","orgCode","permissions","getPermission","key","isGranted","some","p","getOrganization","getUserOrganizations","orgCodes","previous","useEffect","checkLoading","React","createElement","Provider","isAuthenticated","getClaimFromIdToken","idToken","kindeAuth","endpoint","isArray","route","create_org","get_token","kinde_callback","getRoute","end","useKindeAuth","useContext"],"mappings":"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"}