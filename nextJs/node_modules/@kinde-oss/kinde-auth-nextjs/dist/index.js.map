{"version":3,"file":"index.js","sources":["../src/config/index.js","../src/frontend/AuthProvider.jsx","../src/utils/randomString.js","../src/utils/pkceChallenge.js","../src/utils/setupChallenge.js","../src/utils/pageRouter/setVerifierCookie.js","../src/utils/generateCallbackUrl.js","../src/utils/pageRouter/prepareForRedirect.js","../src/utils/generateAuthUrl.js","../src/handlers/pageRouter/login.js","../src/handlers/pageRouter/logout.js","../src/handlers/pageRouter/me.js","../src/handlers/pageRouter/register.js","../src/utils/pageRouter/isTokenValid.js","../src/handlers/pageRouter/callback.js","../src/utils/sanitizeRedirect.js","../src/handlers/pageRouter/createOrg.js","../src/handlers/pageRouter/getToken.js","../src/handlers/pageRouter/setup.js","../src/handlers/pageRouter/handleAuth.js","../src/session/pagesRouter/getAccessToken.js","../src/session/pagesRouter/getIdToken.js","../src/session/pagesRouter/getClaim.js","../src/session/pagesRouter/getFlag.js","../src/session/pagesRouter/getBooleanFlag.js","../src/session/pagesRouter/getIntegerFlag.js","../src/session/pagesRouter/getOrganization.js","../src/session/pagesRouter/getPermission.js","../src/session/pagesRouter/getPermissions.js","../src/session/pagesRouter/getStringFlag.js","../src/session/pagesRouter/getUserOrganizations.js"],"sourcesContent":["const initialState = {\n  user: null,\n  isLoading: true,\n  checkSession: null\n};\n\nconst SESSION_PREFIX = 'pkce-verifier';\n\nconst KINDE_SITE_URL = process.env.KINDE_SITE_URL;\n\n// We need to use NEXT_PUBLIC for frontend vars\nconst KINDE_AUTH_API_PATH = process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH\n  || process.env.KINDE_AUTH_API_PATH\n  || '/api/auth';\n\nconst KINDE_POST_LOGIN_REDIRECT_URL =\n  process.env.KINDE_POST_LOGIN_REDIRECT_URL ||\n  process.env.KINDE_POST_LOGIN_URL_REDIRECT_URL;\nconst KINDE_POST_LOGOUT_REDIRECT_URL =\n  process.env.KINDE_POST_LOGOUT_REDIRECT_URL;\n\nconst KINDE_ISSUER_URL = process.env.KINDE_ISSUER_URL;\nconst KINDE_CLIENT_ID = process.env.KINDE_CLIENT_ID;\nconst KINDE_CLIENT_SECRET = process.env.KINDE_CLIENT_SECRET;\nconst KINDE_AUDIENCE = process.env.KINDE_AUDIENCE;\n\nexport const config = {\n  apiPath: KINDE_AUTH_API_PATH,\n  initialState,\n  SESSION_PREFIX,\n  redirectURL: KINDE_SITE_URL,\n  postLoginRedirectURL: KINDE_POST_LOGIN_REDIRECT_URL,\n  issuerURL: KINDE_ISSUER_URL,\n  clientID: KINDE_CLIENT_ID,\n  clientSecret: KINDE_CLIENT_SECRET,\n  postLogoutRedirectURL: KINDE_POST_LOGOUT_REDIRECT_URL,\n  audience: KINDE_AUDIENCE,\n  responseType: 'code',\n  scope: 'openid profile email offline',\n  codeChallengeMethod: 'S256',\n  redirectRoutes: {\n    callback: `${KINDE_AUTH_API_PATH}/kinde_callback`\n  },\n  issuerRoutes: {\n    logout: '/logout',\n    login: '/oauth2/auth',\n    register: '/oauth2/auth',\n    token: '/oauth2/token',\n    profile: '/oauth2/v2/user_profile'\n  }\n};\n","import React, {\n  useContext,\n  useState,\n  createContext,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport {config} from '../config/index';\n\nconst flagDataTypeMap = {\n  s: 'string',\n  i: 'integer',\n  b: 'boolean'\n};\n\nconst handleError = () => {\n  throw new Error(\n    'Oops! Seems like you forgot to wrap your app in <KindeProvider>.'\n  );\n};\n/**\n * @typedef {Object} User\n * @property {string} id\n * @property {string | null} name\n * @property {string | null} email\n * @property {string | null} given_name\n * @property {string | null} family_name\n * @property {string | null} updated_at\n * @property {string | null} picture\n */\n\n/**\n * @typedef {Object} State\n * @property {User} user\n * @property {boolean} isLoading\n * @property {boolean} isAuthenticated\n * @property {string=} error\n */\n\n/**\n * @returns {React.Context<State>}\n */\nconst AuthContext = createContext({\n  ...config.initialState,\n  user: handleError,\n  isLoading: handleError,\n  getToken: handleError\n});\n\n/**\n * Use auth context.\n * @returns {State}\n */\nexport const useKindeAuth = () => useContext(AuthContext);\n\nconst tokenFetcher = async (url) => {\n  let response;\n  try {\n    response = await fetch(url);\n  } catch {\n    throw new RequestError(0);\n  }\n\n  if (response.ok) {\n    const json = await response.json();\n    return json;\n  } else if (response.status === 401) {\n    return;\n  }\n};\n\nexport const KindeProvider = ({children}) => {\n  const [state, setState] = useState({\n    ...config.initialState,\n    getToken: () => null\n  });\n\n  const setupUrl = `${config.apiPath}/setup`;\n\n  // try and get the user (by fetching /api/auth/setup) -> this needs to do the OAuth stuff\n  const checkSession = useCallback(async () => {\n    try {\n      const tokens = await tokenFetcher(setupUrl);\n\n      const user = {\n        id: tokens.id_token.sub,\n        name: tokens.id_token.name,\n        given_name: tokens.id_token.given_name,\n        family_name: tokens.id_token.family_name,\n        updated_at: tokens.id_token.updated_at,\n        email: tokens.id_token.email,\n        picture: tokens.id_token.picture\n      };\n\n      const getClaim = (claim, tokenKey = 'access_token') => {\n        const token =\n          tokenKey === 'access_token' ? tokens.access_token : tokens.id_token;\n        return token ? {name: claim, value: token[claim]} : null;\n      };\n\n      const getClaimValue = (claim, tokenKey = 'access_token') => {\n        const obj = getClaim(claim, tokenKey);\n        return obj && obj.value;\n      };\n\n      const getFlag = (code, defaultValue, flagType) => {\n        const flags = getClaimValue('feature_flags');\n        const flag = flags && flags[code] ? flags[code] : {};\n\n        if (flag == {} && defaultValue == undefined) {\n          throw Error(\n            `Flag ${code} was not found, and no default value has been provided`\n          );\n        }\n\n        if (flagType && flag.t && flagType !== flag.t) {\n          throw Error(\n            `Flag ${code} is of type ${\n              flagDataTypeMap[flag.t]\n            } - requested type ${flagDataTypeMap[flagType]}`\n          );\n        }\n        return {\n          code,\n          type: flagDataTypeMap[flag.t || flagType],\n          value: flag.v == null ? defaultValue : flag.v,\n          is_default: flag.v == null\n        };\n      };\n\n      const getBooleanFlag = (code, defaultValue) => {\n        try {\n          const flag = getFlag(code, defaultValue, 'b');\n          return flag.value;\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const getStringFlag = (code, defaultValue) => {\n        try {\n          const flag = getFlag(code, defaultValue, 's');\n          return flag.value;\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const getIntegerFlag = (code, defaultValue) => {\n        try {\n          const flag = getFlag(code, defaultValue, 'i');\n          return flag.value;\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const getPermissions = () => {\n        const orgCode = getClaimValue('org_code');\n        const permissions = getClaimValue('permissions');\n        return {\n          permissions,\n          orgCode\n        };\n      };\n\n      const getPermission = (key) => {\n        const orgCode = getClaimValue('org_code');\n        const permissions = getClaimValue('permissions') || [];\n        return {\n          isGranted: permissions.some((p) => p === key),\n          orgCode\n        };\n      };\n\n      const getOrganization = () => {\n        const orgCode = getClaimValue('org_code');\n        return {\n          orgCode\n        };\n      };\n\n      const getUserOrganizations = () => {\n        const orgCodes = getClaimValue('org_codes', 'id_token');\n        return {\n          orgCodes\n        };\n      };\n\n      const getToken = () => {\n        return tokens && tokens.access_token_encoded\n          ? tokens.access_token_encoded\n          : undefined;\n      };\n\n      setState((previous) => ({\n        ...previous,\n        user,\n        getToken,\n        getClaim,\n        getFlag,\n        getBooleanFlag,\n        getStringFlag,\n        getIntegerFlag,\n        getPermissions,\n        getPermission,\n        getOrganization,\n        getUserOrganizations,\n        error: undefined\n      }));\n    } catch (error) {\n      setState((previous) => ({...previous, isLoading: false, error}));\n    }\n  }, [setupUrl]);\n\n  // if you get the user set loading false\n  useEffect(() => {\n    const checkLoading = async () => {\n      await checkSession();\n      setState((previous) => ({\n        ...previous,\n        isLoading: false\n      }));\n    };\n    if (!state.user) {\n      checkLoading();\n    }\n  }, [state.user]);\n\n  // provide this stuff to the rest of your app\n  const {\n    user,\n    getToken,\n    getClaim,\n    getFlag,\n    getBooleanFlag,\n    getStringFlag,\n    getIntegerFlag,\n    getPermissions,\n    getPermission,\n    getOrganization,\n    getUserOrganizations,\n    error,\n    isLoading\n  } = state;\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        error,\n        getToken,\n        getClaim,\n        getFlag,\n        getBooleanFlag,\n        getStringFlag,\n        getIntegerFlag,\n        getPermissions,\n        getPermission,\n        getOrganization,\n        getUserOrganizations,\n        isLoading,\n        isAuthenticated: !!user\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","const {getRandomValues} = require(\"uncrypto\");\n\nexport const randomString = () => {\n    const buffer = new Uint8Array(28);\n    getRandomValues(buffer);\n    return Array.from(buffer).map((n) => n.toString(16).padStart(2, \"0\")).join(\"\");\n}\n","import {SHA256, enc} from 'crypto-js';\nimport {randomString} from './randomString';\n\nexport function generateVerifier() {\n  return randomString();\n}\n\nexport function generateChallenge(code_verifier) {\n  return SHA256(code_verifier).toString(enc.Base64url);\n}\n\nexport default function pkceChallenge() {\n  const code_verifier = generateVerifier();\n  const code_challenge = generateChallenge(code_verifier);\n  return {\n    code_verifier,\n    code_challenge\n  };\n}\n","import pkceChallenge from './pkceChallenge';\nimport {randomString} from './randomString';\n\nexport const setupChallenge = (req, res) => {\n  const state = randomString();\n  const {code_challenge, code_verifier} = pkceChallenge();\n\n  return {state, code_challenge, code_verifier};\n};\n","import {config} from '../../config/index';\nconst cookie = require('cookie');\n\nexport const setVerifierCookie = (state, code_verifier, res, options) => {\n  const jsonCookieValue = JSON.stringify({\n    code_verifier,\n    options,\n  })\n\n  res.setHeader(\n    'Set-Cookie',\n    cookie.serialize(`${config.SESSION_PREFIX}-${state}`, jsonCookieValue, {\n      httpOnly: true,\n      maxAge: 60 * 15\n    })\n  );\n  return state;\n};\n","const generateCallbackUrl = (base, path) => {\n  const siteUrl = base.endsWith('/') ? base.slice(0, -1) : base;\n  const callbackPath = path.startsWith('/') ? path.substr(1) : path;\n  return `${siteUrl}/${callbackPath}`;\n};\n\nexport {generateCallbackUrl};\n","import {setupChallenge} from '../setupChallenge';\nimport {setVerifierCookie} from './setVerifierCookie';\nimport {generateAuthUrl} from '../generateAuthUrl';\n\nexport const prepareForRedirect = (options, type = 'login', res) => {\n  const {code_challenge, code_verifier, state} = setupChallenge();\n  setVerifierCookie(state, code_verifier, res, options);\n  options.state = state;\n  options.code_challenge = code_challenge;\n\n  return generateAuthUrl(options, type).href;\n};\n","import {config} from '../config/index';\nimport {generateCallbackUrl} from '../utils/generateCallbackUrl';\n\nexport function generateAuthUrl(options, type = 'login') {\n  const {org_code, is_create_org, org_name = ''} = options;\n  const authUrl = new URL(config.issuerURL + config.issuerRoutes[type]);\n\n  let searchParams = {\n    redirect_uri: generateCallbackUrl(\n      config.redirectURL,\n      config.redirectRoutes.callback\n    ),\n    client_id: config.clientID,\n    response_type: config.responseType,\n    scope: config.scope,\n    code_challenge: options.code_challenge,\n    code_challenge_method: config.codeChallengeMethod,\n    state: options.state\n  };\n\n  if (type === 'register') {\n    searchParams.start_page = 'registration';\n  }\n\n  if (org_code) {\n    searchParams.org_code = org_code;\n  }\n\n  if (is_create_org) {\n    searchParams.is_create_org = is_create_org;\n    searchParams.org_name = org_name;\n  }\n\n  if (config.audience) {\n    searchParams.audience = config.audience;\n  }\n\n  authUrl.search = new URLSearchParams(searchParams);\n  return authUrl;\n}\n","import {prepareForRedirect} from '../../utils/pageRouter/prepareForRedirect';\n\nexport const login = async (req, res) => {\n  const options = req.query;\n  const {org_code, is_create_org, org_name = ''} = options;\n\n  const authUrl = prepareForRedirect(options, 'login', res);\n\n  res.redirect(authUrl);\n};\n","import {config} from '../../config/index';\n\nvar cookie = require('cookie');\n\nexport const logout = async (req, res) => {\n  res.setHeader(\n    'Set-Cookie',\n    cookie.serialize('kinde_token', null, {\n      httpOnly: true,\n      expires: new Date(0),\n      sameSite: 'lax',\n      secure: config.redirectURL.substring(0, 6) == 'https:',\n      path: '/'\n    })\n  );\n\n  const logoutURL = new URL(config.issuerURL + config.issuerRoutes.logout);\n\n  logoutURL.searchParams.set('redirect', config.postLogoutRedirectURL);\n\n  res.redirect(logoutURL.href);\n};\n","import {config} from '../../config/index';\n\nvar cookie = require('cookie');\n\nexport const me = async (req, res) => {\n  const kinde_token = cookie.parse(req.headers.cookie || '')['kinde_token'];\n  if (kinde_token) {\n    const token = JSON.parse(kinde_token);\n    try {\n      const response = await fetch(\n        config.issuerURL + config.issuerRoutes.profile,\n        {\n          headers: new Headers({\n            Authorization: 'Bearer ' + token.access_token\n          })\n        }\n      );\n      const data = await response.json();\n      res.send(data);\n    } catch (err) {\n      console.error(err);\n    }\n  } else {\n    res.status(401).send({\n      message: 'Unauthorized'\n    });\n  }\n};\n","import {prepareForRedirect} from '../../utils/pageRouter/prepareForRedirect';\n\nexport const register = async (req, res) => {\n  const options = req.query;\n  const {org_code, is_create_org, org_name = ''} = options;\n\n  const authUrl = prepareForRedirect(options, 'register', res);\n\n  res.redirect(authUrl);\n};\n","import jwt_decode from 'jwt-decode';\nimport {config} from '../../config/index';\n\nconst isTokenValid = (token) => {\n  const accessToken = (token && token.access_token) || token;\n  if (!accessToken) return false;\n\n  const accessTokenHeader = jwt_decode(accessToken, {header: true});\n  const accessTokenPayload = jwt_decode(accessToken);\n  let isAudienceValid = true;\n  if (config.audience)\n    isAudienceValid =\n      accessTokenPayload.aud &&\n      accessTokenPayload.aud.includes(config.audience);\n\n  if (\n    accessTokenPayload.iss == config.issuerURL &&\n    accessTokenHeader.alg == 'RS256' &&\n    accessTokenPayload.exp > Math.floor(Date.now() / 1000) &&\n    isAudienceValid\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport {isTokenValid};\n","import jwt_decode from 'jwt-decode';\n\nimport {config} from '../../config/index';\nimport {isTokenValid} from '../../utils/pageRouter/isTokenValid';\nimport {version} from '../../utils/version';\nimport {sanitizeRedirect} from '../../utils/sanitizeRedirect';\nimport {generateCallbackUrl} from '../../utils/generateCallbackUrl';\n\nvar cookie = require('cookie');\n\nexport const callback = async (req, res) => {\n  const {code, state} = req.query;\n  const jsonCookieValue = cookie.parse(req.headers.cookie || '')[\n    `${config.SESSION_PREFIX}-${state}`\n  ];\n\n  let redirectUrl = config.postLoginRedirectURL || config.redirectURL;\n\n  if (jsonCookieValue) {\n    try {\n      const {code_verifier, options} = JSON.parse(jsonCookieValue);\n\n      if (options?.post_login_redirect_url) {\n        redirectUrl = sanitizeRedirect({\n          baseUrl: new URL(config.redirectURL).origin,\n          url: options.post_login_redirect_url\n        });\n      }\n\n      const response = await fetch(\n        config.issuerURL + config.issuerRoutes.token,\n        {\n          method: 'POST',\n          headers: new Headers({\n            'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            'Kinde-SDK': `\"NextJS\"/${version}`\n          }),\n          body: new URLSearchParams({\n            client_id: config.clientID,\n            client_secret: config.clientSecret,\n            code,\n            code_verifier,\n            grant_type: 'authorization_code',\n            redirect_uri: generateCallbackUrl(\n              config.redirectURL,\n              config.redirectRoutes.callback\n            )\n          })\n        }\n      );\n      const data = await response.json();\n\n      const accessToken = jwt_decode(data.access_token);\n      if (isTokenValid(data)) {\n        res.setHeader(\n          'Set-Cookie',\n          cookie.serialize(`kinde_token`, JSON.stringify(data), {\n            httpOnly: true,\n            expires: new Date(accessToken.exp * 1000),\n            sameSite: 'lax',\n            secure: config.redirectURL.substring(0, 6) == 'https:',\n            path: '/'\n          })\n        );\n      } else {\n        console.error('One or more of the claims were not verified.');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    res.redirect(redirectUrl);\n  } else {\n    const logoutURL = new URL(config.issuerURL + config.issuerRoutes.logout);\n    logoutURL.searchParams.set('redirect', config.postLogoutRedirectURL);\n    res.redirect(logoutURL.href);\n  }\n};\n","export const sanitizeRedirect = ({baseUrl, url}) => {\n  if (url.startsWith(\"/\")){\n    return `${baseUrl}${url}`\n  } else if (new URL(url).origin === baseUrl) {\n    return url\n  }\n\n  return baseUrl\n}","import {prepareForRedirect} from '../../utils/pageRouter/prepareForRedirect';\n\nexport const createOrg = async (req, res) => {\n  const {org_name = ''} = req.query.options;\n  const options = {\n    org_name,\n    is_create_org: true\n  };\n  const authUrl = prepareForRedirect(options, 'register', res);\n\n  res.redirect(authUrl);\n};\n","export const getToken = async (req, res) => {\n  if (req.cookies.kinde_token) {\n    res.status(200).json(JSON.parse(req.cookies.kinde_token));\n  } else {\n    res.status(500).json({\n      message:\n        'There is no kinde_token, you are not authenticated. Try logging in.'\n    });\n  }\n};\n","const cookie = require('cookie');\nimport jwt_decode from 'jwt-decode';\n\nexport const setup = async (req, res) => {\n  res.setHeader('Cache-Control', 'no-cache');\n  const kinde_token = cookie.parse(req.headers.cookie || '')['kinde_token'];\n\n  if (kinde_token) {\n    const token = JSON.parse(kinde_token);\n    const accessTokenPayload = jwt_decode(token.access_token);\n    const idTokenPayload = jwt_decode(token.id_token);\n    res.send({\n      access_token_encoded: token.access_token,\n      id_token: idTokenPayload,\n      access_token: accessTokenPayload\n    });\n  } else {\n    res.status(401).send({\n      message: 'Unauthorized'\n    });\n  }\n};\n","import {login} from './login';\nimport {logout} from './logout';\nimport {me} from './me';\nimport {register} from './register';\nimport {callback} from './callback';\nimport {createOrg} from './createOrg';\nimport {getToken} from './getToken';\nimport {setup} from './setup';\n\nconst getRoute = (endpoint) => {\n  const routeMap = {\n    create_org: createOrg,\n    get_token: getToken,\n    kinde_callback: callback,\n    login,\n    logout,\n    me,\n    register,\n    setup\n  };\n  return routeMap[endpoint];\n};\n\nexport default () =>\n  async function handler(req, res) {\n    let {\n      query: {kindeAuth: endpoint}\n    } = req;\n\n    endpoint = Array.isArray(endpoint) ? endpoint[0] : endpoint;\n\n    const route = getRoute(endpoint);\n\n    return route ? await route(req, res) : res.status(404).end();\n  };\n","import jwt_decode from 'jwt-decode';\n\nexport const getAccessToken = (req, res) => {\n  if (req.cookies.kinde_token) {\n    const accessTokenPayload = jwt_decode(\n      JSON.parse(req.cookies.kinde_token).access_token\n    );\n    return accessTokenPayload;\n  } else {\n    return {\n      message:\n        'There is no kinde_token, you are not authenticated. Try logging in.'\n    };\n  }\n};\n","import jwt_decode from 'jwt-decode';\n\nexport const getIdToken = (req, res) => {\n  if (req.cookies.kinde_token) {\n    const accessTokenPayload = jwt_decode(\n      JSON.parse(req.cookies.kinde_token).id_token\n    );\n    return accessTokenPayload;\n  } else {\n    return {\n      message:\n        'There is no kinde_token, you are not authenticated. Try logging in.'\n    };\n  }\n};\n","import {getAccessToken} from './getAccessToken';\nimport {getIdToken} from './getIdToken';\n\nexport const getClaim = (req, res, claim) => {\n  const accessToken = getAccessToken(req, res);\n  return accessToken ? accessToken[claim] : null;\n};\n\nexport const getClaimFromIdToken = (req, res, claim) => {\n  const idToken = getIdToken(req, res);\n  return idToken ? idToken[claim] : null;\n};\n","import {getClaim} from './getClaim';\n\nconst flagDataTypeMap = {\n  s: 'string',\n  i: 'integer',\n  b: 'boolean'\n};\n\nexport const getFlag = (code, defaultValue, flagType) => {\n  const flags = getClaim('feature_flags');\n  const flag = flags && flags[code] ? flags[code] : {};\n\n  if (flag == {} && defaultValue == undefined) {\n    throw Error(\n      `Flag ${code} was not found, and no default value has been provided`\n    );\n  }\n\n  if (flagType && flag.t && flagType !== flag.t) {\n    throw Error(\n      `Flag ${code} is of type ${flagDataTypeMap[flag.t]} - requested type ${\n        flagDataTypeMap[flagType]\n      }`\n    );\n  }\n  return {\n    code,\n    type: flagDataTypeMap[flag.t || flagType],\n    value: flag.v == null ? defaultValue : flag.v,\n    is_default: flag.v == null\n  };\n};\n","import {getFlag} from './getFlag';\n\nexport const getBooleanFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 'b');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getFlag} from './getFlag';\n\nexport const getIntegerFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 'i');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getClaim} from './getClaim';\n\nexport const getOrganization = (req, res) => {\n  const orgCode = getClaim(req, res, 'org_code');\n  return {\n    orgCode\n  };\n};\n","import {getClaim} from './getClaim';\n\nexport const getPermission = (req, res, key) => {\n  const orgCode = getClaim(req, res, 'org_code');\n  const permissions = getClaim(req, res, 'permissions') || [];\n  return {\n    isGranted: permissions.some((p) => p === key),\n    orgCode\n  };\n};\n","import {getClaim} from './getClaim';\n\nexport const getPermissions = (req, res) => {\n  const orgCode = getClaim(req, res, 'org_code');\n  const permissions = getClaim(req, res, 'permissions');\n  return {\n    permissions,\n    orgCode\n  };\n};\n","import {getFlag} from './getFlag';\n\nexport const getStringFlag = (code, defaultValue) => {\n  try {\n    const flag = getFlag(code, defaultValue, 's');\n    return flag.value;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import {getClaimFromIdToken} from './getClaim';\n\nexport const getUserOrganizations = (req, res) => {\n  const orgCodes = getClaimFromIdToken(req, res, 'org_codes');\n  return {\n    orgCodes\n  };\n};\n"],"names":["KINDE_SITE_URL","process","env","KINDE_AUTH_API_PATH","NEXT_PUBLIC_KINDE_AUTH_API_PATH","KINDE_POST_LOGIN_REDIRECT_URL","KINDE_POST_LOGIN_URL_REDIRECT_URL","KINDE_POST_LOGOUT_REDIRECT_URL","config","apiPath","initialState","user","isLoading","checkSession","SESSION_PREFIX","redirectURL","postLoginRedirectURL","issuerURL","KINDE_ISSUER_URL","clientID","KINDE_CLIENT_ID","clientSecret","KINDE_CLIENT_SECRET","postLogoutRedirectURL","audience","KINDE_AUDIENCE","responseType","scope","codeChallengeMethod","redirectRoutes","callback","issuerRoutes","logout","login","register","token","profile","flagDataTypeMap","s","i","b","handleError","Error","AuthContext","createContext","getToken","useKindeAuth","useContext","KindeProvider","children","state","setState","useState","setupUrl","useCallback","async","tokens","response","fetch","url","RequestError","ok","json","status","tokenFetcher","id","id_token","sub","name","given_name","family_name","updated_at","email","picture","getClaim","claim","tokenKey","access_token","value","getClaimValue","obj","getFlag","code","defaultValue","flagType","flags","flag","undefined","t","type","v","is_default","getBooleanFlag","err","console","error","getStringFlag","getIntegerFlag","getPermissions","orgCode","permissions","getPermission","key","isGranted","some","p","getOrganization","getUserOrganizations","orgCodes","access_token_encoded","previous","useEffect","checkLoading","React","createElement","Provider","isAuthenticated","getRandomValues","require","randomString","buffer","Uint8Array","Array","from","map","n","toString","padStart","join","pkceChallenge","code_verifier","code_challenge","SHA256","enc","Base64url","generateChallenge","cookie","generateCallbackUrl","base","path","endsWith","slice","startsWith","substr","prepareForRedirect","options","res","setupChallenge","req","setVerifierCookie","jsonCookieValue","JSON","stringify","setHeader","serialize","httpOnly","maxAge","org_code","is_create_org","org_name","authUrl","URL","searchParams","redirect_uri","client_id","response_type","code_challenge_method","start_page","search","URLSearchParams","generateAuthUrl","href","query","redirect","expires","Date","sameSite","secure","substring","logoutURL","set","me","kinde_token","parse","headers","Headers","Authorization","data","send","message","isTokenValid","accessToken","accessTokenHeader","jwt_decode","header","accessTokenPayload","isAudienceValid","aud","includes","iss","alg","exp","Math","floor","now","redirectUrl","post_login_redirect_url","sanitizeRedirect","baseUrl","origin","method","body","client_secret","grant_type","createOrg","cookies","setup","idTokenPayload","handleAuth","kindeAuth","endpoint","isArray","route","create_org","get_token","kinde_callback","getRoute","end","getAccessToken","getIdToken","getClaimFromIdToken","idToken"],"mappings":"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"}